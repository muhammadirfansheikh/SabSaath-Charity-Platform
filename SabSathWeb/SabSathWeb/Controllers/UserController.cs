using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net.Mail;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Cors;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using SabSath.Application.Repositiories;
using SabSath.Core.Models;
using SabSath.Core.Utilities;

namespace SabSathWeb.Controllers
{
    [EnableCors("Security")]
    [Route("api/[controller]")]
    [ApiController]
    public class UserController : ControllerBase
    {
        private readonly IUserService _userService;
        public UserController(IUserService userService)
        {
            _userService = userService;
        }
        
        [HttpPost("CrudUser")]
        public JsonResult CrudUser(UserLogin user)
        {
            if (user == null)
            {
                return null;
            }
            var response = _userService.CrudUser(user);
            return new JsonResult(response);

        }




        [HttpPost("VerifyLogin")]
        public string VerifyLogin(UserLogin user)
        {

            var response = _userService.VerifyLogin(user);

            string json = JsonConvert.SerializeObject(response, Formatting.Indented);
            return json;
        }


        [HttpPost("ForgotPassword")]
        public JsonResult ForgotPassword(UserLogin user)
        {
            if (user == null)
            {
                return null;
            }
            var response = _userService.ForgotPassword(user);
            return new JsonResult(response);
        }


        [HttpPost("ForgotPasswordAutoGenerated")]
        public JsonResult ForgotPasswordAutoGenerated(UserLogin user)
        {
            if (user == null)
            {
                return null;
            }
            var response = _userService.ForgotPasswordAutoGenerated(user);
            return new JsonResult(response);
        }

        [HttpPost("GetMenu")] 
        public JsonResult GetMenu(List<int> UserID)
        {
            Dictionary<string, object> objResponse = new Dictionary<string, object>();
            try
            {
                var response = _userService.GetRoleAndFeatures(UserID[0]);
                List<Menu> rountes = CommonObjects.GetMenuList(response.DataSet.Tables[1]);
                ///List<Menu> routes = CommonObjects.GetMenus();
                objResponse.Add("routes", rountes);
            }
            catch (Exception ex)
            {

                objResponse = CommonObjects.GetRepsonse(false, ResponseCodes.Exception, ResponseMessages.ExceptionMessage);
            }
            return new JsonResult(objResponse);
        }


        [HttpPost("User_Change_Password")]
        public string User_Change_Password(UserLogin objUserLogin)
        {

            var response = _userService.usp_User_Change_Password(objUserLogin);
            string json = JsonConvert.SerializeObject(response, Formatting.Indented);
            return json;


        }


        [HttpPost("LogOut")]
        public string LogOut(UserLogin objUserLogin)
        {
            var response = _userService.LogOut(objUserLogin);
            string json = JsonConvert.SerializeObject(response, Formatting.Indented);
            return json;
        }

      
        //manzoor commit

        //[HttpPost("GetMenu")]
        //public JsonResult GetMenu()
        //{
        //    Dictionary<string, object> objResponse = new Dictionary<string, object>();
        //    UserRole obj = new UserRole();
        //    obj.RoleId = 3;

        //    List<Menu> routes = CommonObjects.GetMenus();
        //    objResponse.Add("routes", routes);

        //    List<Menu> routes1 = _userService.RoleAgainst_Menues(obj);
        //    objResponse.Add("routes", routes1);

        //    return new JsonResult(objResponse);
        //}








    }
}